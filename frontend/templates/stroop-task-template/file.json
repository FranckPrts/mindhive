{"components":{"1":{"id":"1","type":"lab.canvas.Frame","context":"<main class=\"content-vertical-center content-horizontal-center\">\n  <canvas />\n</main>\n\n<footer class=\"content-vertical-center content-horizontal-center\">\n  <p>\n    What's the <em>color</em> of \n    the word shown above? <br>\n    Please press <kbd>r</kbd> for red,\n    <kbd>g</kbd> for green,\n    <kbd>b</kbd> for blue and <kbd>y</kbd> for yellow.\n  </p>\n</footer>\n","contextSelector":"canvas","files":[],"parameters":[{"name":"","value":"","type":"string"}],"responses":[{"label":"","event":"","target":"","filter":""}],"messageHandlers":[{"title":"","message":"","code":""}],"title":"Task frame","children":["3"]},"2":{"id":"2","type":"lab.canvas.Screen","content":[{"type":"i-text","version":"2.4.4","originX":"center","originY":"center","left":0,"top":0,"width":18.69,"height":36.16,"fill":"black","stroke":null,"strokeWidth":1,"strokeDashArray":null,"strokeLineCap":"butt","strokeDashOffset":0,"strokeLineJoin":"round","strokeMiterLimit":4,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","fillRule":"nonzero","paintFirst":"fill","globalCompositeOperation":"source-over","transformMatrix":null,"skewX":0,"skewY":0,"text":"+","fontSize":"72","fontWeight":"normal","fontFamily":"sans-serif","fontStyle":"normal","lineHeight":1.16,"underline":false,"overline":false,"linethrough":false,"textAlign":"center","textBackgroundColor":"","charSpacing":0,"id":"5","styles":{}}],"files":[],"parameters":[{"name":"","value":"","type":"string"}],"responses":[{"label":"","event":"","target":"","filter":""}],"messageHandlers":[{"title":"assign non-response","message":"run","code":"this.data.correct = 'empty'"}],"viewport":[800,600],"title":"Fixation cross","timeout":"${this.parameters.iti}","_tab":"Behavior"},"3":{"messageHandlers":[{"title":"","message":"","code":""}],"id":"3","type":"lab.flow.Loop","children":["4"],"responses":[{"label":"","event":"","target":"","filter":""}],"templateParameters":{"columns":[{"name":"color","type":"string"},{"name":"word","type":"string"},{"name":"phase","type":"string"},{"name":"congruent","type":"string"}],"rows":[["red","red","task","yes"],["red","red","task","yes"],["red","red","task","yes"],["red","green","task","no"],["red","blue","task","no"],["red","yellow","task","no"],["green","red","task","no"],["green","green","task","yes"],["green","green","task","yes"],["green","green","task","yes"],["green","blue","task","no"],["green","yellow","task","no"],["blue","red","task","no"],["blue","green","task","no"],["blue","blue","task","yes"],["blue","blue","task","yes"],["blue","blue","task","yes"],["blue","yellow","task","no"],["#ffe32a","red","task","no"],["#ffe32a","green","task","no"],["#ffe32a","blue","task","no"],["#ffe32a","yellow","task","yes"],["#ffe32a","yellow","task","yes"],["#ffe32a","yellow","task","yes"]]},"title":"Stroop task","parameters":[{"name":"","value":"","type":"string"}],"files":[],"sample":{"mode":"sequential","n":"5"}},"4":{"messageHandlers":[{"title":"","message":"","code":""}],"id":"4","type":"lab.flow.Sequence","children":["2","5","6"],"responses":[{"label":"","event":"","target":"","filter":""}],"title":"Trial","parameters":[{"name":"","value":"","type":"string"}],"files":[],"_tab":"Content"},"5":{"id":"5","type":"lab.canvas.Screen","content":[{"type":"i-text","version":"2.4.4","originX":"center","originY":"center","left":0,"top":0,"width":331.08,"height":36.16,"fill":"${ this.parameters.color }","stroke":null,"strokeWidth":1,"strokeDashArray":null,"strokeLineCap":"butt","strokeDashOffset":0,"strokeLineJoin":"round","strokeMiterLimit":4,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","fillRule":"nonzero","paintFirst":"fill","globalCompositeOperation":"source-over","transformMatrix":null,"skewX":0,"skewY":0,"text":"${ this.parameters.word }","fontSize":"72","fontWeight":"bold","fontFamily":"sans-serif","fontStyle":"normal","lineHeight":1.16,"underline":false,"overline":false,"linethrough":false,"textAlign":"center","textBackgroundColor":"","charSpacing":0,"id":"6","styles":{}}],"files":[],"parameters":[{"name":"","value":"","type":"string"}],"responses":[{"label":"red","event":"keydown","target":"","filter":"r"},{"label":"green","event":"keydown","target":"","filter":"g"},{"label":"blue","event":"keydown","target":"","filter":"b"},{"label":"#ffe32a","event":"keydown","target":"","filter":"y"}],"messageHandlers":[{"title":"","message":"","code":""}],"viewport":[800,600],"title":"Stroop screen","correctResponse":"${ this.parameters.color }","_tab":"Content"},"6":{"id":"6","type":"lab.canvas.Screen","content":[{"type":"i-text","version":"2.7.0","originX":"center","originY":"center","left":0,"top":"${ parameters.phase == 'practice' ? 0 : 1000 }","width":1246.91,"height":58.76,"fill":"${ state.correct ? 'green' : 'red' }","stroke":null,"strokeWidth":1,"strokeDashArray":null,"strokeLineCap":"butt","strokeDashOffset":0,"strokeLineJoin":"round","strokeMiterLimit":4,"scaleX":1,"scaleY":1,"angle":0,"flipX":false,"flipY":false,"opacity":1,"shadow":null,"visible":true,"clipTo":null,"backgroundColor":"","fillRule":"nonzero","paintFirst":"fill","globalCompositeOperation":"source-over","transformMatrix":null,"skewX":0,"skewY":0,"text":"${ state.correct ? 'Well done!' : 'Please respond accurately' }","fontSize":"52","fontWeight":"bold","fontFamily":"sans-serif","fontStyle":"normal","lineHeight":1.16,"underline":false,"overline":false,"linethrough":false,"textAlign":"center","textBackgroundColor":"","charSpacing":0,"id":"24","styles":{}}],"files":[],"parameters":[{"name":"","value":"","type":"string"}],"responses":[{"label":"","event":"","target":"","filter":""}],"messageHandlers":[{"title":"recordResponses","message":"before:prepare","code":"this.data.trial_number = 1 + parseInt(this.options.id.split('_')[this.options.id.split('_').length-2]);\n\nthis.data.condition = this.parameters.congruent === 'yes' ? 'Match' : 'Mismatch';\n\nthis.data.reaction_time = this.state.duration;\n\nif(this.state.response === this.parameters.color){\n  this.data.correct_response = true;\n} else {\n  this.data.correct_response = false;\n}\n\nthis.data.response_given = this.state.correct === 'empty' ? 'no' : 'yes';\n\n\n"}],"viewport":[800,600],"title":"Inter-trial interval","timeout":"${ parameters.phase == 'practice' ? 1000 : 500 }","_tab":"Content","tardy":true},"7":{"id":"7","type":"lab.canvas.Frame","context":"<main class=\"content-vertical-center content-horizontal-center\">\n  <canvas />\n</main>\n\n<footer class=\"content-vertical-center content-horizontal-center\">\n  <p>\n    What's the <em>color</em> of \n    the word shown above? <br>\n    Please press <kbd>r</kbd> for red,\n    <kbd>g</kbd> for green,\n    <kbd>b</kbd> for blue and <kbd>y</kbd> for yellow.\n  </p>\n</footer>\n","contextSelector":"canvas","files":[],"parameters":[{"name":"","value":"","type":"string"}],"responses":[{"label":"","event":"","target":"","filter":""}],"messageHandlers":[{"title":"","message":"","code":""}],"title":"Practice frame","children":["10"],"_tab":"Behavior","skipCondition":"${ state.response === 'skipPractice' }","tardy":true,"skip":true},"8":{"messageHandlers":[{"title":"","message":"","code":""}],"id":"8","type":"lab.html.Screen","responses":[{"label":"continue","event":"keypress","target":"","filter":"Space"},{"label":"skipPractice","event":"keypress","target":"","filter":"q"}],"title":"Instruction","content":"<header class=\"content-vertical-center content-horizontal-center\">\n  <h1>Stroop Task</h1>\n</header>\n\n<main>\n  <p>\n    Welcome to the <strong>Stroop experiment</strong>!\n  </p>\n  <p>\n    ${this.parameters.intro}\n  </p>\n  <p>\n    To indicate the color of the word, please use the keys <strong>r</strong>, <strong>g</strong>, <strong>b</strong> and <strong>y</strong> for <span style=\"color: red;\">red</span>, <span style=\"color: green;\">green</span>, <span style=\"color: blue;\">blue</span> and <span style=\"color: #ffe32a;\">yellow</span>, respectively.\n      <br>\n      Please answer quickly, and as accurately as you can.\n  </p>\n  <p>\n    Press the the space bar on your keyboard to start doing the practice trials.\n  </p>\n  <p>\n    If you want to skip the practice trials and go directly to the task, press the \"q\" button on your keyboard.\n  </p>\n</main>\n\n<footer class=\"content-vertical-center content-horizontal-center\">\n  \n</footer>\n\n\n","parameters":[{"name":"","value":"","type":"string"}],"files":[],"_tab":"Content"},"9":{"messageHandlers":[{"title":"calculate","message":"before:prepare","code":"// helper functions\nconst computeProportion = (a, b) => {\n  if (b !== 0) {\n    return parseInt( (a / b) * 100 ) / 100;\n  } else {\n    return null;\n  }\n}\n\nconst computeMean = arr => {\n  if (arr.length === 0){\n    return null\n  } else {\n    return parseInt(arr.reduce((a, b) => a + b) / arr.length);\n  } \n}\n\n// get trials\nconst trials = this.options.datastore.data.filter(row => row.phase === 'task' && row.sender === 'Inter-trial interval');\nconst matchTrials = trials.filter(row => row.condition === 'Match');\nconst mismatchTrials = trials.filter(row => row.condition === 'Mismatch');\n\nthis.data.aggregated = {\n  reaction_time_match: computeMean(matchTrials.map(row => row.reaction_time)),\n  reaction_time_mismatch: computeMean(mismatchTrials.map(row => row.reaction_time)),\n  correct_response_proportion_match: computeProportion(matchTrials.filter(row => row.correct_response).length, matchTrials.length), \n  correct_response_proportion_mismatch: computeProportion(mismatchTrials.filter(row => row.correct_response).length, mismatchTrials.length)\n};"}],"id":"9","type":"lab.html.Screen","responses":[{"label":"end","event":"keypress","target":"","filter":"Space"}],"title":"Thanks","content":"<header class=\"content-vertical-center content-horizontal-center\">\n  \n</header>\n\n<main>\n  <h1>\n    Thank you!\n  </h1>\n  <h1>\n    Press the space bar to finish the task.\n  </h1>\n</main>\n\n","timeout":"","parameters":[{"name":"","value":"","type":"string"}],"files":[],"_tab":"Scripts","tardy":true},"10":{"messageHandlers":[{"title":"","message":"","code":""}],"id":"10","type":"lab.flow.Loop","children":["4"],"responses":[{"label":"","event":"","target":"","filter":""}],"templateParameters":{"columns":[{"name":"color","type":"string"},{"name":"word","type":"string"},{"name":"phase","type":"string"}],"rows":[["red","red","practice"],["green","green","practice"],["blue","blue","practice"],["#ffe32a","yellow","practice"],["red","green","practice"],["green","blue","practice"],["blue","yellow","practice"],["#ffe32a","red","practice"]]},"title":"Practice task","parameters":[{"name":"","value":"","type":"string"}],"files":[],"_collapsed":false,"sample":{"mode":"draw-shuffle"}},"11":{"messageHandlers":[{"title":"","message":"","code":""}],"id":"11","type":"lab.html.Screen","responses":[{"label":"continue","event":"keypress","target":"","filter":"Space"}],"title":"Main task","content":"<header class=\"content-vertical-center content-horizontal-center\">\n  <h1>Ready for the real data collection?</h1>\n</header>\n<main>\n\n  <p>\n    Press the the space bar to start the main task.\n  </p>\n\n</main>\n<footer class=\"content-vertical-center content-horizontal-center\">\n  \n</footer>\n\n\n","parameters":[{"name":"","value":"","type":"string"}],"files":[]},"12":{"id":"12","type":"lab.flow.Sequence","children":["8","7","11","1","9"],"files":[],"parameters":[{"name":"iti","value":"500","type":"number"},{"name":"intro","value":"In this experiment, your task will be to identify the color of the word shown on the screen. The word itself is immaterial - you can safely ignore it.","type":"string"}],"responses":[{"label":"","event":"","target":"","filter":""}],"messageHandlers":[{"title":"","message":"","code":""}],"title":"Stroop task","_tab":"Parameters"},"root":{"messageHandlers":[{"title":"","message":"","code":""}],"id":"root","title":"root","type":"lab.flow.Sequence","children":["12"],"plugins":[{"type":"lab.plugins.Metadata"}],"metadata":{"title":"Stroop task","description":"An implementation of the classic paradigm introduced by Stroop (1935).","repository":"https://github.com/FelixHenninger/lab.js/tree/master/tasks","contributors":"Felix Henninger <mailbox@felixhenninger.com> (http://felixhenninger.com)"},"parameters":[{"name":"","value":"","type":"string"}],"files":[]}},"version":[20,2,4],"files":{"files":{"index.html":{"content":"data:text/html,%3C!doctype%20html%3E%0A%3Chtml%3E%0A%3Chead%3E%0A%20%20%3Cmeta%20charset%3D%22utf-8%22%3E%0A%20%20%3Ctitle%3EExperiment%3C%2Ftitle%3E%0A%20%20%3C!--%20lab.js%20library%20and%20experiment%20code%20--%3E%0A%20%20%24%7B%20header%20%7D%0A%3C%2Fhead%3E%0A%3Cbody%3E%0A%20%20%3C!--%20If%20you're%20looking%20to%20fill%20all%20available%20browser%20space%2C%0A%20%20%20%20%20%20%20try%20replacing%20the%20class%20below%20with%20%22container%20fullscreen%22%20--%3E%0A%20%20%3Cdiv%20class%3D%22container%20fullscreen%22%20data-labjs-section%3D%22main%22%3E%0A%20%20%20%20%3Cmain%20class%3D%22content-vertical-center%20content-horizontal-center%22%3E%0A%20%20%20%20%20%20%3Cdiv%3E%0A%20%20%20%20%20%20%20%20%3Ch2%3ELoading%20Experiment%3C%2Fh2%3E%0A%20%20%20%20%20%20%20%20%3Cp%3EThe%20experiment%20is%20loading%20and%20should%20start%20in%20a%20few%20seconds%3C%2Fp%3E%0A%20%20%20%20%20%20%3C%2Fdiv%3E%0A%20%20%20%20%3C%2Fmain%3E%0A%20%20%3C%2Fdiv%3E%0A%3C%2Fbody%3E%0A%3C%2Fhtml%3E%0A","source":"library"},"style.css":{"content":"data:text/css,%2F*%20Please%20define%20your%20custom%20styles%20here%20*%2F","source":"library"}},"bundledFiles":{"lib/lab.css":{"type":"text/css"},"lib/loading.svg":{"type":"image/svg+xml"},"lib/lab.js":{"type":"application/javascript"},"lib/lab.js.map":{"type":"text/plain"},"lib/lab.fallback.js":{"type":"application/javascript"},"lib/lab.legacy.js":{"type":"application/javascript"},"lib/lab.legacy.js.map":{"type":"text/plain"}}}}
